#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground  
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_x86_64

on: 
  release:
    types: [published]

  push:
    branches: 
      - master 

  #schedule:
  #  - cron: 0 8 * * 5
  
  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-latest
    #runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        hostnamectl

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/opwt/lede.git
        REPO_BRANCH: master
      run: |
       git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
       #cd openwrt
       #sed -i '5s/#//' feeds.conf.default
      
    - name: 自定义插件主题。
      env:
        FEEDS_CONFIG_FILE: 'feeds.conf.default'
      run: |
       [ -e $FEEDS_CONFIG_FILE ] && mv $FEEDS_CONFIG_FILE openwrt/
       cd openwrt/package
       mkdir openwrt-packages
       cd openwrt-packages
       git clone https://github.com/opwt/luci-theme-atmaterial
       #git clone https://github.com/opwt/luci-app-koolproxyR
       #git clone https://github.com/opwt/luci-theme-rosy
       #git clone https://github.com/opwt/luci-app-kcptun
       git clone https://github.com/opwt/luci-app-clash
       #cd luci-app-clash
       #git checkout -b openwrt-use01-ok origin/openwrt-use01-ok
       #cd ../
       #git clone https://github.com/opwt/luci-app-shadowsocks
       git clone https://github.com/opwt/OpenClash.git
       cp -rfv   OpenClash/luci-app-openclash  ./
       rm -rfv   OpenClash


    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds clean
        ./scripts/feeds update -a
        #rm -rf feeds/lienol/lienol/ipt2socks
        #rm -rf feeds/lienol/lienol/shadowsocksr-libev
        #rm -rf feeds/lienol/lienol/pdnsd-alt
        #rm -rf feeds/lienol/package/verysync
        #rm -rf feeds/lienol/lienol/luci-app-verysync
        #rm -rf package/lean/kcptun
        #rm -rf package/lean/trojan
        #rm -rf package/lean/v2ray
        #rm -rf package/lean/luci-app-kodexplorer
        #rm -rf package/lean/luci-app-pppoe-relay
        #rm -rf package/lean/luci-app-pptp-server
        #rm -rf package/lean/luci-app-v2ray-server
        ./scripts/feeds install -a       
        ./scripts/feeds install -a

    #- name: Import external feeds
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/Lienol/openwrt-package package/lienol
    #    git clone "your_github_link" package/"your_folder_name"      

    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Zip Files
      run: |
          #gzip openwrt/bin/targets/x86/64/*.img
          #zip -r openwrt-out.zip ./openwrt/bin/
          zip -r openwrt.zip ./openwrt/
    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        #mv openwrt-out.zip  ./artifact/
        #cd openwrt
        #make clean
        #cd ../        
        mv  openwrt.zip   ./artifact/
        #cp friendlywrt-rk3328/friendlywrt/.config ./artifact/
        zip -r artifact.zip ./artifact/
        release_tag="Lede-$(date +%Y-%m-%d-%H%M%S)"
        echo "##[set-output name=release_tag;]$release_tag"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        #GITHUB_TOKEN: ${{ secrets.sec_token }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
        release_name: 发布 ${{ steps.assemble_artifact.outputs.release_tag }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        #GITHUB_TOKEN: ${{ secrets.sec_token }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./artifact.zip
        asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}.zip
        asset_content_type: application/zip

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        #make -j1 V=s
        
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin
